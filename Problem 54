
144. Binary Tree Preorder Traversal

Given the root of a binary tree, return the preorder traversal of its nodes' values.

CODE : -
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> preorderTraversal(TreeNode root){

        ArrayList<Integer> result = new ArrayList<>();
        // if(root == null){
        //     return result;
        // }

        preorder(root, result);

        return result;
        
    }

    public List<Integer> preorder(TreeNode root, List<Integer> result)
    {

        if(root == null){
            return result;
        }

        else{
            result.add(root.val);
            preorder(root.left,result);
            preorder(root.right,result);
        }

        return result;
    }

}
