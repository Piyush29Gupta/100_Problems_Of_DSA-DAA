42. Trapping Rain Water

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

CODE : -

class Solution {

    public int[] leftMax(int[] height, int n){
        int left_max[] = new int[n];

        left_max[0] = height[0];

        for(int i = 1; i<n; i++){
            left_max[i] = Math.max(left_max[i-1] , height[i]);
        }

        return left_max;
    
    }


    public int[] rightMax(int[] height, int n){

        int right_max[] = new int[n];

        right_max[n-1] = height[n-1];

        for(int i = n-2; i>=0; i--){
            right_max[i] = Math.max(right_max[i+1] , height[i]);
        }

        return right_max;

    } 

    public int trap(int[] height) {

        int n = height.length;

        int[] left_max = leftMax(height, n);
        int[] right_max = rightMax(height, n);

        int sum = 0;
        for(int i =0; i<n; i++){
            int w = Math.min(left_max[i],right_max[i]) - height[i];
            sum = sum + w;
        }

        return sum;
        
    }
}
