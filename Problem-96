2007. Find Original Array From Doubled Array

An integer array original is transformed into a doubled array changed by appending twice the value of every element in original, and then randomly shuffling the resulting array.

Given an array changed, return original if changed is a doubled array. If changed is not a doubled array, return an empty array. The elements in original may be returned in any order.

CODE : -

class Solution {
    public int[] findOriginalArray(int[] changed) {
        int n = changed.length;
        if(n%2!=0){
            return new int[] {};
        }

        Arrays.sort(changed);

        HashMap<Integer,Integer> map = new HashMap<>();

        for(int num : changed){
            map.put(num, map.getOrDefault(num,0)+1);
        }

        ArrayList<Integer> result = new ArrayList<>();

        for(int num : changed){
            int twice = num*2;

            if(map.getOrDefault(num,0)==0){
                continue;
            }

            if(map.getOrDefault(twice,0)==0){
                return new int[]{};
            }

            result.add(num);

            map.put(num, map.get(num) -1);

            map.put(twice, map.get(twice) -1);
        }

        int[] resultArray = new int[result.size()];

        for(int i =0; i<result.size();i++){
            resultArray[i] = result.get(i); 
        }
        return resultArray;

    }
}
