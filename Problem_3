876. Middle of the Linked List :- 

Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

CODE :- 

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        int counter =0;
        ListNode current = head;
        while(current!=null){
            counter = counter +1;
            current = current.next;
        }
        int nc;
        nc = (counter/2);
        current = head;
        while(nc>0)
        {
            nc --;
            current = current.next;
        }
        return current;
        
    }
     
}
