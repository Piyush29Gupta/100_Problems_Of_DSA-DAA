54. Spiral Matrix

Given an m x n matrix, return all elements of the matrix in spiral order.

CODE : - 

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {

        int dir = 0;
        int m = matrix.length;
        int n = matrix[0].length;
        
        int top = 0;
        int left = 0;
        int bottom = m-1;
        int right = n-1;

        ArrayList<Integer> arr = new ArrayList<>();

        /*
        dir = 0 - left to right, constant= top;
        dir = 1 - top to bottom , constant = right;
        dir = 2 - right to left , constant = bottom ;
        dir = 3 - bottom to top , constant = left;
        */

        while(top<=bottom && left<=right){

            //left -right
            if(dir == 0){
                for(int i = left; i<=right;i++){
                    arr.add(matrix[top][i]);
                }
                top ++;
            }

            //top - bottom
            if(dir == 1){
                for(int i = top; i<=bottom;i++){
                    arr.add(matrix[i][right]);
                }
                right--;
            }

            //right - left
            if(dir == 2){
                for(int i = right; i>=left;i--){
                    arr.add(matrix[bottom][i]);
                }
                bottom--;
            }

            //bottom - top
            if(dir == 3){
                for(int i = bottom; i>=top;i--){
                    arr.add(matrix[i][left]);
                }
                left++;
            }


            dir = (dir+1)%4;

        }
        return arr;
        
    }
}
